- name: Grub Configuration | Install Grub
  become: yes
  block:
    # These steps are handled in the archinstall python script
    #- name: Install Grub and Dependencies
    #  pacman:
    #    name:
    #      - grub
    #      - efibootmgr
    #      - os-prober
    #    state: present
    #    update_cache: yes
    #
    #- name: Install Grub to EFI partition
    #  command: grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB
    
    - name: Generate GRUB config
      command: grub-mkconfig -o /boot/grub/grub.cfg

    - name: Ensure GRUB config file exists
      stat:
        path: /boot/grub/grub.cfg
      register: grub_cfg

    - name: Verify GRUB configuration
      assert:
        that:
          - grub_cfg.stat.exists
          - grub_cfg.stat.size > 0
        fail_msg: "GRUB configuration failed to generate"

    # /etc/grub.d/:
    # - Contains executable scripts that generate parts of the final GRUB config
    # - Each script (40_custom, 10_linux, etc.) contributes to the final output
    # - Used for more advanced customization like:
    #   - Adding custom menu entries
    #   - Modifying how OS detection works
    #   - Adding theme configurations
    - name: Create GRUB custom config directory
      file:
        path: /etc/grub.d
        state: directory

    #/etc/default/grub:
    # - This is the main configuration file for GRUB
    # - Contains core settings like timeout, default OS, kernel parameters
    # - Modified directly when you want to change GRUB behavior
    # - Used by grub-mkconfig when generating the final grub.cfg
    - name: Configure GRUB defaults
      template:
        src: templates/etc_default_grub.j2
        dest: /etc/default/grub
        owner: root
        group: root
        mode: "0644"
      notify: Update GRUB config

    - name: Add Custom GRUB Theme
      copy:
        src: files/grub-theme/
        dest: /usr/share/grub/themes/
        owner: root
        group: root
        mode: "0755"
      when: grub_theme_enabled | default(false)
